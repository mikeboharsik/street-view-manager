name: Deploy release
on:
  release:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  aws_deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    steps:
    - name: Checkout street-view-manager
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
    - name: Setup Node.js environment
      uses: actions/setup-node@v3.6.0
      with:
        node-version: 16.19.1
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: us-east-1
        role-to-assume: ${{ vars.AWS_ROLE_ARN }}
    - name: Install yarn
      shell: pwsh
      run: npm install -g yarn
    - name: Install client packages
      shell: pwsh
      run: |
        Push-Location ./client
        ./Invoke-InstallClientPackages.ps1
        Pop-Location
    - name: Run client unit tests
      shell: pwsh
      run: |
        Push-Location ./client
        ./Invoke-RunUnitTests.ps1
        Pop-Location
    - name: Run client e2e tests
      shell: pwsh
      run: |
        Push-Location ./client
        ./Invoke-RunE2eTests.ps1
        Pop-Location
    - name: Build deployable client files
      shell: pwsh
      run: |
        Push-Location ./client
        ./Invoke-BuildClient.ps1 -AppClientId '${{ vars.PROD_APP_CLIENT_ID }}' -AppKey '${{ vars.PROD_APP_KEY }}'
        Pop-Location
    - name: Install server packages
      shell: pwsh
      run: |
        Push-Location ./server
        ./Invoke-InstallServerPackages.ps1
        Pop-Location
    - name: Upload to AWS lambda function
      shell: pwsh
      run: |
        Push-Location ./server

        ./Invoke-UploadStreetViewManager.ps1 `
          -LambdaFunctionName '${{ vars.PROD_LAMBDA_FUNCTION_NAME }}' `
          -CloudFrontDistributionID '${{ vars.PROD_CLOUDFRONT_DISTRIBUTION_ID }}'

        Pop-Location
